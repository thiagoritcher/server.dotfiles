
call plug#begin('~/.vim/plugged')
" Declare the list of plugins.
Plug 'vim-scripts/argtextobj.vim'
Plug 'michaeljsmith/vim-indent-object'
Plug 'bkad/CamelCaseMotion'

Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
" List ends here. Plugins become visible to Vim after this call.
 call plug#end()


 let mapleader = " "
filetype plugin on
set omnifunc=syntaxcomplete#Complete

"set bomb
set encoding=utf-8
set autoindent
set ts=4
filetype plugin indent on

syntax on
set ignorecase
set smartcase
set hlsearch
set modelines=0
set wildmenu 
set wildmode=full
set nu "line numbers


"for indenting
set expandtab
set shiftwidth=4
set tabstop=4
set smarttab

set lbr "word wrap
set tw=500

set wrap "Wrap lines

" scrolling
inoremap <C-E> <C-X><C-E> "scrolling on insert
inoremap <C-Y> <C-X><C-Y>
set scrolloff=3 " keep three lines between the cursor and the edge of the screen

" With a map leader it's possible to do extra key combinations
" like <leader>w saves the current file

"auto indent for brackets
inoremap {<CR> {<CR>}<Esc>O

"nnoremap tj  :tabnext<CR>

set mouse=a


" persistent undo
if !isdirectory($HOME."/.dotfiles/vim/undodir")
    call mkdir($HOME."/.dotfiles/vim/undodir", "p")
endif

set undodir=~/.vim/undodir
set undofile
set undolevels=1000 "maximum number of changes that can be undone
set undoreload=10000 "maximum number lines to save for undo on a buffer reload

" markdown also starts with .md
autocmd BufNewFile,BufRead *.md set filetype=markdown
nnoremap <C-P> :Files<CR>

nnoremap <leader>a ggVG
nnoremap <leader>w :w<cr>
nnoremap <leader>q :q<cr>
nnoremap <leader>f :bn<cr>
nnoremap sh :nohlsearch<Bar>:echo<CR>

nnoremap <leader>sp :set paste<cr>
nnoremap mm ]m

inoremap jj <Esc>

nnoremap vm [mVi{jok
nnoremap vo{ Vi{jok 

nnoremap <leader>p "*p
nnoremap <leader>y "*y

vnoremap <leader>p "*p
vnoremap <leader>y "*y

noremap <leader><leader> "

noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l
noremap <C-h> <C-w>h

vmap <Tab> >gv
vmap <S-Tab> <gv

inoremap <S-Tab> <C-D>
